---
title: "Class 09: Candy Analysis Mini Project"
author: "Alana (PID: A16738319)"
format: pdf
editor: visual
---

In today's class we will 


## Import Data 

```{r}
candy_file <- "candy-data.txt"
```

```{r}
candy <- read.csv(candy_file, row.names = 1)
```

```{r}
head(candy)
```

```{r}
candy
```


## Data exploration

> Q1. How many different candy types are in this dataset?

There are `r nrow(candy)` in this dataset. 

```{r}
nrow(candy)
```


> Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```

> Q. How many chocolate candys are there in the dataset

```{r}
sum(candy$chocolate)
```

> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?


```{r}
candy["Fun Dip",]$winpercent
```

```{r}
candy["Ring pop",]$winpercent
```

> Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat",]$winpercent
```


> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars",]$winpercent
```


```{r}
skimr::skim(candy)
```



> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

Yes, the variable "winpercent" appears to be on a different scale compared to the majority of the other variables in the dataset. "winpercent" has values that range from approximately 22.45 to 84.18, as shown by the percentiles (p0, p25, p50, p75, p100) and is likely a percentage value representing some kind of popularity or preference score for each candy. This suggests that "winpercent" is measured on a continuous scale and represents a substantially different type of data compared to the binary indicators in the dataset.

> Q7. What do you think a zero and one represent for the candy$chocolate column?

For the "chocolate" column, a "0" would mean the candy does not contain chocolate, while a "1" means it does contain chocolate. 

> Q8. Plot a histogram of winpercent values

```{r}
hist(candy$winpercent)
```



```{r}
library(ggplot2)
```

> Q8b. Plot a distogram of winpercent values using ggplot

```{r}
ggplot(candy) + 
  aes(winpercent) + 
  geom_histogram(bins=7)
  
```

> Q9. Is the distribution of winpercent values symmetrical?

No 

> Q10. Is the center of the distribution above or below 50%?

Below 

```{r}
mean(candy$winpercent)
```


```{r}
summary(candy$winpercent)
```

Distribution definitely below 50. (47.83)

> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

- first find all chocolate candy 
- find their winpercent values 
- calculate the mean of these values 

- then do the same for fruity candy and compare iwth the mean for chocolate candy  

```{r}
chocolate.inds <- candy$chocolate == 1
chocolate.inds
```

```{r}
chocolate.inds <- candy$chocolate == 1
chocolate.win <- candy[chocolate.inds,]
chocolate.win 
```


```{r}
chocolate.inds <- candy$chocolate == 1
chocolate.win <- candy[chocolate.inds,]$winpercent
chocolate.win 
```


```{r}
chocolate.inds <- candy$chocolate == 1
chocolate.win <- candy[chocolate.inds,]$winpercent
mean(chocolate.win)
```

```{r}
fruity.inds <- candy$fruity == 1
fruity.win <- candy[fruity.inds,]$winpercent
mean(fruity.win)
```

On average chocolate candy higher ranked than fruit candy. 

> Q12. Is this difference statistically significant?

```{r}
t.test(chocolate.win, fruity.win)
```

 This difference is statistically significant (2.871e-08). 


> Q13. What are the five least liked candy types in this set?

```{r}
x <- c(5,6,4)
sort(x)
```

```{r}
x[order(x)]
```

The order function returns the indices that make the input sorted. 

```{r}
inds <- order(candy$winpercent)
head(candy[inds,], 5)
```


> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
inds <- order(candy$winpercent)
tail(candy[inds,], 5)
```


> Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
ggplot(candy) +
  aes(winpercent, rownames(candy)) + 
  geom_col()
```

> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?


```{r}
#l fig-height: 10 
#l fig-width: 7 

ggplot(candy) + 
  aes(winpercent, reorder( rownames(candy), winpercent)) + 
  geom_col()
```

```{r}
ggsave("mybarplot.png", height=10)
```

![exported image that is a bit bigger so I can read it](mybarplot.png)


Add my custon colors to my barplot 


```{r}
my_cols=rep("grey", nrow(candy))
my_cols[candy$fruity == 1] <- "pink"
my_cols
```



```{r}
#l fig-height: 10 
#l fig-width: 7 

ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols) 
```


```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
```



```{r}
#l fig-height: 10 
#l fig-width: 7 

ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols) 
```

> Q17. What is the worst ranked chocolate candy?

Sixlets

> Q18. What is the best ranked fruity candy?

Starbursts

```{r}
library(ggrepel)
```

```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "red"
```


Plot of winpercent vs pricepercent 

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols) 
```


There are just too many labels in this above plot to be readable. We can use the `ggrepel` package to do a better job of placing labels without overlap. 

```{r}
library(ggrepel)
```



```{r}
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=3.3, max.overlaps = 40)
```

> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Reese's Miniatures

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```
> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

> Q23. Similarly, what two variables are most positively correlated?

```{r}
pca <- prcomp(candy, scale=TRUE)
summary(pca)
```

```{r}
my_data <- cbind(candy, pca$x[,1:3])
```

```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "red"
```


```{r}
ggplot(my_data) + 
  aes(PC1,PC2, label=rownames(my_data)) + 
  geom_point(col=my_cols) + 
  geom_text_repel()
```

```{r}
library(corrplot)
```


```{r}
cij <- cor(candy)
corrplot(cij)
```


```{r}
p <- ggplot(my_data) + 
  aes(x=PC1,y=PC2, 
      size=winpercent/100,
      text=rownames(my_data),
      label=rownames(my_data))+ 
  geom_point(col=my_cols)
p
```

How do the original variables contribute to our PCs? For this we look at the loading component of our results object i.e the `pca$rotation` object. 

```{r}
head(pca$rotation)
```

make a barplot with ggplot and order the bars by their value. Recall that you need a 
data.frame as input for ggplot. 

```{r}
library(ggrepel)

p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```

more candy labels you can change the max.overlaps value to allow more overlapping labels or pass the ggplot object p to plotly like so to generate an interactive plot that you can mouse over to see labels:

```{r}
library(plotly)
```

```{r}
#ggplotly(p)
```


> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

fruit and chocolate 

> Q23. Similarly, what two variables are most positively correlated?

chocolate and winpercent. 

> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Let’s finish by taking a quick look at PCA our loadings. Do these make sense to you? Notice the opposite effects of chocolate and fruity and the similar effects of chocolate and bar (i.e. we already know they are correlated).

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```


```{r}
res <- as.data.frame(pca$rotation)

ggplot(res) + 
  aes(PC1, reorder(row.names(res), PC1)) + 
  geom_col()
```

original variables picked up strongly by PC1 in the positive direction: fruity, pluralists, hard. Yes these do make sence that a fruity candy would be hard and come in a multi-pack. 
